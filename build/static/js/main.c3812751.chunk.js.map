{"version":3,"sources":["components/Header.js","components/Code.js","components/VirtualCard.js","pages/Index.js","pages/Show.js","pages/InputForm.js","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","to","Code","vCard","vcardsJs","Object","entries","name","value","version","getFormattedString","size","bgColor","fgColor","level","includeMargin","renderAs","VirtualCard","tag","role","_id","organization","firstName","lastName","title","Index","cardList","map","Card","index","Show","id","match","params","find","p","useState","editForm","setEditForm","onChange","evt","target","handleSubmit","event","preventDefault","updatecardList","history","push","onSubmit","style","fontSize","alignSelf","type","onClick","deletecardList","placeholder","nameSuffix","cellPhone","email","url","workPhone","note","maxHeight","InputForm","newForm","setnewForm","useHistory","createcardList","width","border","fontWeight","Main","setcardList","URL","getcardList","a","fetch","response","json","data","console","log","card","method","headers","body","JSON","stringify","useEffect","exact","path","render","rp","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c3812751.chunk.js","sourcesContent":["import {\n  Link\n} from \"react-router-dom\";\n\n\n\nfunction Header(props) {\n  return ( <\n    nav className = \"nav\" >\n    <\n    Link to = \"/\" >\n    <\n    h1 > AddMe - QRC < /h1> <\n    /Link> <\n    h2 >. . . . create your own personal QR Code< /h2>\n\n    <\n    /nav>\n  );\n}\n\nexport default Header;","// import { useState } from \"react\";\n// import Header from \"./Header\"\n// import { ReactDOM } from \"react\";\nimport QRCode from \"qrcode.react\";\nimport vcardsJs from \"vcards-js\";\n\nconst Code = (props) => {\n\nconst vCard=vcardsJs();\n  for (const [name, value] of Object.entries(props)) {\n    vCard[name] = value;\n    vCard.version = '3.0';\n  }\nreturn (\n<div className=\"QRCode\">\n          \n          <QRCode\n  value={vCard.getFormattedString()}\n  size={128}\n  bgColor={\"#00ff0080\"}\n  fgColor={\"#013e5d\"}\n  level={\"L\"}\n  includeMargin={false}\n  renderAs={\"svg\"}\n/>\n                 {/* <pre className=\"vCardoutput\">{vCard.getFormattedString()}</pre> */}\n        </div>\n       \n);\n}\nexport default Code;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Code from \"./Code\";\n\n\n\nconst VirtualCard = (props) => {\n  return (\n    <div>\n       <div key={props._id} className=\"props\" tag={props.role}>\n       <Link to={`/cardList/${props._id}`}> \n       <h3> {props.role}</h3>\n          <div className=\"Btn\" >\n            <p className=\"Organization\">{props.organization}</p>\n           <div>\n  \n           <p className=\"Name\">{props.firstName} {props.lastName}</p>\n             <p className=\"Title\">{props.title}</p>\n            </div>\n             <div className=\"CardCode\">\n              <Code {...props} />\n             </div>\n           </div>\n        </Link>\n      </div>\n      </div>\n          )};\n    export default VirtualCard;","import React from \"react\";\nimport VirtualCard from \"../components/VirtualCard\";\n// import cardList from \"../components/Main\"\n\nfunction Index(props) {\n \n  \n    // loaded function\n    const loaded = () => {\n    \n    return props.cardList.map((Card, index) => (\n    <div>\n    <VirtualCard key={Card._id}{...Card} />\n    </div>\n    \n            \n    ));\n  };\n\n    \n      \n  const loading = () => {\n    return <h1>Loading...</h1>;\n  };\n     return (\n      <section>\n         {props.cardList ? loaded() : loading()}\n      </section>\n    );\n      \n     }\n  export default Index;","import { useState } from \"react\";\nimport QRCode from \"qrcode.react\";\nimport vcardsJs from \"vcards-js\";\n\nfunction Show(props) {\n  const id = props.match.params.id;\n  const cardList = props.cardList;\n  const Card = cardList.find((p) => p._id === id);\n\n  // state for form\n  const [editForm, setEditForm] = useState(Card);\n\n  // onChange function for form for vCard\n  const onChange = evt => {\n    const {\n      name,\n      value\n    } = evt.target;\n    setEditForm({\n      ...editForm,\n      [name]: value\n    });\n  };\n\n  const vCard = vcardsJs();\n  for (const [name, value] of Object.entries(editForm)) {\n    vCard[name] = value;\n    vCard.version = '3.0';\n  };\n  const removeCard = () => {\n    props.deletecardList(Card._id);\n    props.history.push(\"/cardlist\");\n  };\n\n  // handlesubmit for form\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    props.updatecardList(editForm, Card._id);\n    props.history.push(\"/cardlist\");\n     };\n\n  return (\n <form className=\"showForm\" onSubmit={handleSubmit}>\n    <div>\n      <h3 style={{fontSize:'40px'}}> {Card.firstName} {Card.lastName}</h3>\n      <div style={{alignSelf:'center'}} className=\"rowBtn\">      \n        <button type=\"button\"id=\"delete\" onClick={removeCard}>DELETE</button> \n        <button type=\"submit\"> Update Card </button>\n      </div>\n      <div className=\"showField\">\n        <div className=\"FormField\">\n            <p className=\"Label\">First Name</p>\n            <input type=\"text\" \n          value={editForm.firstName} \n          name=\"firstName\" \n          placeholder=\"First Name\"\n          onChange={onChange} />\n        </div> \n        <div className=\"FormField\">\n          <p className=\"Label\">Last Name</p>\n         <input type=\"text\" value={editForm.lastName} name=\"lastName\" placeholder=\"Doe\"onChange={onChange}/>\n       </div> \n       <div className=\"FormField\">\n         <p className=\"Label\">Suffix</p>\n         <input type=\"text\" value={editForm.nameSuffix} name=\"nameSuffix\" placeholder=\"Jr.\"onChange={onChange} />\n       </div> \n       <div className=\"FormField\">\n         <p className=\"Label\">Cell Phone</p>\n         <input type=\"text\" value={editForm.cellPhone} name=\"cellPhone\" placeholder=\"312-555-1212\" onChange={onChange}/>\n       </div> \n       <div className=\"FormField\">\n           <p className=\"Label\">Email</p>\n           <input type=\"text\" value={editForm.email} name=\"email\" placeholder=\"johndoe@ACMECorporation.com\" onChange={onChange} />\n       </div>\n      <div className=\"FormField\">\n         <p className=\"Label\">Organization</p>\n         <input type=\"text\" value={editForm.organization} name=\"organization\" placeholder=\"ACME Corporation\" onChange={onChange} />\n       </div> \n       <div className=\"FormField\">\n         <p className=\"Label\">Title</p>\n         <input type=\"text\" value={editForm.title} name=\"title\" placeholder=\"Software Developer\" onChange={onChange}/>\n       </div> \n       <div className=\"FormField\">\n           <p className=\"Label\">Website/URL</p>\n           <input type=\"text\" value={editForm.url} name=\"url\" placeholder=\"http://ACMECorporation.com\" onChange={onChange} />\n       </div>\n       <div className=\"FormField\">\n         <p className=\"Label\">Work Phone</p>\n         <input type=\"text\" value={editForm.workPhone} name=\"workPhone\" placeholder=\"312-555-1212\" onChange={onChange}/>\n       </div> \n       <div className=\"FormField\">\n               <p className=\"Label\">Address/Location</p>\n               <input type=\"text\" value={editForm.note} name=\"note\" placeholder=\"12346 Main Street, Atlanta, GA 55555\" onChange={onChange}/>\n      </div>\n     <div className=\"output\">\n             <select type=\"text\" className=\"form-control form-control-lg\" placeholder=\"Priority\" name=\"role\" value=\"\" onChange={onChange} onSubmit={handleSubmit}>\n               <option>Accounting & Tax Services</option>\n               <option>Arts, Culture & Entertainment</option>\n               <option>Auto Sales & Service</option>\n               <option>Banking & Finance</option>\n               <option>Business Services</option>\n               <option>Community Organizations</option>\n               <option>Dentists & Orthodontists</option>\n               <option>Education</option>77\n               <option>Health & Wellness</option>\n               <option>Health Care</option>\n               <option>Home Improvement</option>\n               <option>Insurance</option>\n               <option>Internet & Web Services</option>\n               <option>Legal Services</option>\n               <option>Lodging & Travel</option>\n               <option>Marketing & Advertising</option>\n               <option>News & Media</option>\n               <option>Pet Services</option>\n               <option>Real Estate</option>\n               <option>Restaurants & Nightlife</option>\n               <option>Shopping & Retail</option>\n               <option>Sports & Recreation</option>\n               <option>Transportation</option>\n               <option>Utilities</option>\n               <option>Wedding, Events & Meetings</option>\n               <option>Other</option>\n           </select>\n       <div className=\"QRCode\">\n         <h4>QR Code (to save image, <br/> right-click -> Save Image As)</h4>\n         <QRCode value={vCard.getFormattedString()} size={128} bgColor={\"#90d9d1\"} fgColor={\"#013e5d\"} level={\"L\"} includeMargin={false} renderAs={\"canvas\"}/>\n        </div>\n        <div className=\"VCard\">\n         <h4>VCard Data String</h4>\n         <pre className=\"vCardoutput\" style={{fontSize:'10px', maxHeight:'100px'}}>{vCard.getFormattedString()}</pre>\n       </div>\n       </div>\n       </div>\n       </div>\n    </form>\n  )\n}\nexport default Show;","import { useState } from \"react\";\n// import { Link } from \"react-router-dom\";\nimport QRCode from \"qrcode.react\";\nimport vcardsJs from \"vcards-js\";\nimport { useHistory } from \"react-router-dom\"\nimport { Link } from \"react-router-dom\";\n\n\nfunction InputForm(props) {\n\n  const [newForm, setnewForm]=useState({\n    \n      firstName: \"\", \n      lastName: \"\", \n      nameSuffix: \"\",\n      cellPhone: \"\",\n      email: \"\",\n      organization: \"\", \n      title: \"\",\n      url: \"\",\n      workPhone: \"\",\n      note: \"\",\n      role: \"\",\n    });\n\n  const onChange = evt => {\n    const { name, value } = evt.target;\n    setnewForm({\n      ...newForm,\n      [name]: value\n    });\n  };\n\n  const vCard=vcardsJs();\n  for (const [name, value] of Object.entries(newForm)) {\n    vCard[name] = value;\n    vCard.version = '3.0';\n  }\nlet history = useHistory()\n\n\n      \nconst handleSubmit = (event) => {\n    event.preventDefault();\n    props.createcardList(newForm);\n    history.push(\"/cardList\");\n          setnewForm({\n      firstName: \"\", \n      lastName: \"\", \n      nameSuffix: \"\",\n      cellPhone: \"\",\n      email: \"\",\n      organization: \"\", \n      title: \"\",\n      url: \"\",\n      workPhone: \"\",\n      note: \"\",\n      role: \"\",\n     \n    });\n  \n       \n\n  };\n\n\n  return (\n<div className=\"InputForm\">\n <form className=\"RegForm\" onSubmit={handleSubmit}>\n <h7> <strong>Step 1:</strong> Enter desired contact details and the QR Code below will update as you type. <br/><strong>Step 2:</strong> Simply take a picture with phone or save as image to your local computer.</h7>\n   <div className=\"InputField\">\n      <div className=\"FormField\">\n            <p className=\"Label\">\n            First Name</p>\n            <input\n           type=\"text\" \n          \n           value={newForm.firstName} \n           name=\"firstName\" \n           placeholder=\"First Name\"\n           onChange={onChange} \n            />\n        </div> \n        <div className=\"FormField\">\n          <p className=\"Label\">Last Name</p>\n          <input\n           type=\"text\" value={newForm.lastName} name=\"lastName\" placeholder=\"Doe\"onChange={onChange} \n            />\n        </div> \n        <div className=\"FormField\">\n          <p className=\"Label\">Suffix</p>\n          <input\n           type=\"text\" value={newForm.nameSuffix} name=\"nameSuffix\" placeholder=\"Jr.\"onChange={onChange} \n            />\n        </div> \n        <div className=\"FormField\">\n          <p className=\"Label\">Cell Phone</p>\n          <input\n          type=\"text\" value={newForm.cellPhone} name=\"cellPhone\" placeholder=\"312-555-1212\" onChange={onChange}/>\n        </div> \n        <div className=\"FormField\">\n            <p className=\"Label\">Email</p>\n            <input\n               type=\"text\" value={newForm.email} name=\"email\" placeholder=\"johndoe@ACMECorporation.com\" onChange={onChange} />\n        </div>\n        <div className=\"FormField\">\n          <p className=\"Label\">Organization</p>\n          <input\n           type=\"text\" value={newForm.organization} name=\"organization\" placeholder=\"ACME Corporation\" onChange={onChange} />\n        </div> \n        <div className=\"FormField\">\n          <p className=\"Label\">Title</p>\n          <input\n            type=\"text\" value={newForm.title} name=\"title\" placeholder=\"Software Developer\" onChange={onChange}/>\n        </div> \n        <div className=\"FormField\">\n            <p className=\"Label\">Website/URL</p>\n            <input\n               type=\"text\" value={newForm.url} name=\"url\" placeholder=\"http://ACMECorporation.com\" onChange={onChange} />\n        </div>\n        <div className=\"FormField\">\n          <p className=\"Label\">Work Phone</p>\n          <input\n          type=\"text\" value={newForm.workPhone} name=\"workPhone\" placeholder=\"312-555-1212\" onChange={onChange}/>\n        </div> \n        <div className=\"FormField\">\n                <p className=\"Label\">Address/Location</p>\n                <input\n                  type=\"text\" value={newForm.note} name=\"note\" placeholder=\"12346 Main Street, Atlanta, GA 55555\" onChange={onChange}/>\n       </div>\n       </div> \n    \n      \n         \n        <div className=\"output\">\n          <div className=\"Add\" style={{width:'250px', border:'solid 2px #F5F0EC'}}>\n        <button type=\"submit\"><strong> +  Add to VIRTUAL DIRECTORY after choosing category below</strong></button>\n        <div>\n          <select type=\"text\" className=\"form-control form-control-lg\" placeholder=\"Priority\" name=\"role\" value=\"\" onChange={onChange} onSubmit={handleSubmit}>\n                <option>Accounting & Tax Services</option>\n                <option>Arts, Culture & Entertainment</option>\n                <option>Auto Sales & Service</option>\n                <option>Banking & Finance</option>\n                <option>Business Services</option>\n                <option>Community Organizations</option>\n                <option>Dentists & Orthodontists</option>\n                <option>Education</option>77\n                <option>Health & Wellness</option>\n                <option>Health Care</option>\n                <option>Home Improvement</option>\n                <option>Insurance</option>\n                <option>Internet & Web Services</option>\n                <option>Legal Services</option>\n                <option>Lodging & Travel</option>\n                <option>Marketing & Advertising</option>\n                <option>News & Media</option>\n                <option>Pet Services</option>\n                <option>Real Estate</option>\n                <option>Restaurants & Nightlife</option>\n                <option>Shopping & Retail</option>\n                <option>Sports & Recreation</option>\n                <option>Transportation</option>\n                <option>Utilities</option>\n                <option>Wedding, Events & Meetings</option>\n                <option>Other</option>\n            </select>\n         </div>\n          <button type=\"button\"><Link to={`/cardList/`} className=\"Link\">VIRTUAL DIRECTORY</Link></button>\n         </div>\n        \n         <div className=\"QRCodeBox\">\n          <h4 style={{fontWeight:\"bold\"}}>QR Code (to save image, <br/> right-click -> Save Image As)</h4>\n          <QRCode\n  value={vCard.getFormattedString()}\n  size={128}\n  bgColor={\"#90d9d1\"}\n  fgColor={\"#013e5d\"}\n  level={\"L\"}\n  includeMargin={false}\n  renderAs={\"canvas\"}\n/>\n        </div>\n           <div className=\"VCard\">\n          <h4>VCard Data String</h4>\n          <pre className=\"vCardoutput\">{vCard.getFormattedString()}</pre>\n        </div>\n      </div>\n     </form>\n    </div>\n   )};\n\n\nexport default InputForm;","import {\n  useEffect,\n  useState\n} from \"react\";\nimport {\n  Route,\n  Switch\n} from \"react-router-dom\";\nimport Index from \"../pages/Index\";\nimport Show from \"../pages/Show\";\nimport InputForm from \"../pages/InputForm\";\n\n\n\n\nfunction Main(props) {\n  const [cardList, setcardList] = useState(null);\n\n  const URL = \"http://localhost:5000/cardlist/\";\n\n  const getcardList = async () => {\n    const response = await fetch(URL);\n    const data = await response.json();\n    setcardList(data);\n  };\n\n  console.log(cardList);\n\n  const createcardList = async (card) => {\n    // make post request to create cardList\n    await fetch(URL, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"Application/json\",\n      },\n      body: JSON.stringify(card),\n    });\n    // update list of cardList\n    getcardList();\n    console.log(cardList);\n  };\n\n  const updatecardList = async (card, id) => {\n    // make put request to create cardList\n    await fetch(URL + id, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"Application/json\",\n      },\n      body: JSON.stringify(card),\n    });\n    // update list of cardList\n    getcardList();\n  };\n\n  const deletecardList = async (id) => {\n    // make delete request to create cardList\n    await fetch(URL + id, {\n      method: \"DELETE\",\n    });\n    // update list of cardList\n\n    getcardList();\n  };\n\n  useEffect(() => getcardList(), []);\n\n  return ( \n   <main>\n    <Switch>\n    <Route exact path=\"/\">\n      <InputForm createcardList = {createcardList}/> \n      </Route>\n      <Route exact path = \"/cardlist\" render = { (rp) => ( < Index cardList={cardList} getcardList={getcardList} {...rp} /> \n      )} />\n      <Route path = \"/cardlist/:id\"\n    render = {\n      (rp) => ( <\n        Show cardList = {\n          cardList\n        }\n        updatecardList = {\n          updatecardList\n        }\n        deletecardList = {\n          deletecardList\n        } {\n          ...rp\n        }\n        />\n      )\n    }\n    /> < /\n    Switch > <\n    /main>\n  );\n}\n\nexport default Main;","import 'bootstrap/dist/css/bootstrap.min.css';\nimport Header from \"./components/Header\";\nimport Main from \"./components/Main\";\nimport \"./styles.css\";\n// import InputForm from \"./components/InputForm\";\n\n\n\n\nfunction App() {\n  return (\n      <div className=\"App\">\n        {/* <body> */}\n        <Header />\n        <Main />\n        {/* </body> */}\n      </div>\n    );\n  }\n\n  export default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n<link\n  rel=\"stylesheet\"\n  href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\"\n  integrity=\"sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3\"\n  crossorigin=\"anonymous\"\n/>\n\n// IMPORT ROUTER\n\n\nReactDOM.render(\n     <React.StrictMode> \n       <Router>\n      <App />\n  </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}